{"version":3,"sources":["components/navBar/NavBar.js","components/jumbotron/Jumbotron.js","components/gameCard/GameCard.js","components/footer/Footer.js","App.js","index.js"],"names":["Navbar","react_default","a","createElement","className","this","props","score","Component","Jumbotron","GameCard","onClick","imageClick","alt","src","image","Footer","App","state","chocolate","id","clickedChocolate","event","currentChocolate","target","_this","indexOf","setState","sort","b","Math","random","alert","concat","_this2","navBar_NavBar","components_jumbotron_Jumbotron","map","gameCard_GameCard","key","components_footer_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"4UAmBeA,0LAZX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CACZH,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,oBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,UAAkCC,KAAKC,MAAMC,gBAPlCC,cCQNC,SATG,kBACjBR,EAAAC,EAAAC,cAAA,UAAQC,UAAY,UACnBH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,oGCOaO,SARE,SAAAJ,GAAK,OACpBL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOO,QAASL,EAAMM,YACnCX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKU,IAAI,UAAUC,IAAKR,EAAMS,YCCrBC,SANA,kBACdf,EAAAC,EAAAC,cAAA,UAAQC,UAAY,UACnBH,EAAAC,EAAAC,cAAA,qCCyFac,oNApFbC,MAAQ,CACNC,UAAW,CACT,CACEC,GAAI,EACJL,MAAO,IAET,CACEK,GAAI,EACJL,MAAO,KAGXM,iBAAkB,GAClBd,MAAO,KAITK,WAAa,SAAAU,GACX,IAAMC,EAAmBD,EAAME,OAAOX,IAEpCY,EAAKP,MAAMG,iBAAiBK,QAAQH,IAAqB,GAIzDE,EAAKE,SAAS,CACZR,UAAWM,EAAKP,MAAMC,UAAUS,KAAK,SAAS1B,EAAG2B,GAC/C,MAAO,GAAMC,KAAKC,WAEpBV,iBAAkB,GAClBd,MAAO,IAEPyB,MAAM,0BAIRP,EAAKE,SACH,CACER,UAAWM,EAAKP,MAAMC,UAAUS,KAAK,SAAS1B,EAAG2B,GAC/C,MAAO,GAAMC,KAAKC,WAEpBV,iBAAkBI,EAAKP,MAAMG,iBAAiBY,OAC5CV,GAEFhB,MAAOkB,EAAKP,MAAMX,MAAQ,GAG5B,WAC2B,KAArBkB,EAAKP,MAAMX,QACbyB,MAAM,oBACNP,EAAKE,SAAS,CACZR,UAAWM,EAAKP,MAAMC,UAAUS,KAAK,SAAS1B,EAAG2B,GAC/C,MAAO,GAAMC,KAAKC,WAEpBV,iBAAkB,GAClBd,MAAO,gFASV,IAAA2B,EAAA7B,KACP,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgC,EAAD,CACE5B,MAAOF,KAAKa,MAAMX,QAEpBN,EAAAC,EAAAC,cAACiC,EAAD,MACAnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZC,KAAKa,MAAMC,UAAUkB,IAAI,SAAAlB,GAAS,OACjClB,EAAAC,EAAAC,cAACmC,EAAD,CACE1B,WAAYsB,EAAKtB,WACjBQ,GAAID,EAAUC,GACdmB,IAAKpB,EAAUC,GACfL,MAAOI,EAAUJ,WAIvBd,EAAAC,EAAAC,cAACqC,EAAD,cAhFUhC,cCJlBiC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a40f51e2.chunk.js","sourcesContent":["\n//sets up the reusable Navbar component\nimport React, { Component } from \"react\";\nimport \"./NavBar.css\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-default navbar-fixed-top\">\n         <ul>\n          <li className=\"itemLeft\">Test Your Memory</li>\n          <li className=\"itemCenter\"></li>\n          <li className=\"itemRight\">Score: {this.props.score}</li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","//sets up the reusable Jumbotron component\nimport React from \"react\";\nimport \"./Jumbotron.css\";\n\nconst Jumbotron = () => (\n\t<header className = \"header\">\n\t\t<h1>Clicky Game!</h1>\n\t\t<h2>Click on each image no more than once. If you click on all 12 images once, you win!</h2>\n\n        </header>\n\n);\n\nexport default Jumbotron;","\n//sets up the reusable GameCard component\nimport React from \"react\";\nimport \"./gameCard.css\";\n\n//pass the image into eaDch card so all 12 are rendered\nconst GameCard = props => (\n  <div className=\"card\" onClick={props.imageClick}>\n    <div className=\"img-container\">\n      <img alt=\"dessert\" src={props.image} />\n    </div>\n  </div>\n);\n\nexport default GameCard;","//sets up the reusable Footer component\nimport React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => (\n\t<header className = \"footer\">\n\t\t<p>Clicky Game by Bianca</p>\n\t</header>\n);\n\nexport default Footer;","//imports dependencies and files\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/navBar\";\nimport Jumbotron from \"./components/jumbotron\";\nimport GameCard from \"./components/gameCard\";\nimport Footer from \"./components/footer\";\n//import chocolate from \"./chocolate.json\";\nimport \"./app.css\";\n\n//sets state to 0 or empty\nclass App extends Component {\n  state = {\n    chocolate: [\n      {\n        id: 1,\n        image: '',\n      },\n      {\n        id: 2, \n        image: ''\n      }\n    ],\n    clickedChocolate: [],\n    score: 0\n  };\n\n//when you click on a card ... the chocolate is taken out of the array\n  imageClick = event => {\n    const currentChocolate = event.target.alt;\n    const ChocolateAlreadyClicked =\n      this.state.clickedChocolate.indexOf(currentChocolate) > -1;\n\n//if you click on a Chocolate that has already been selected, the game is reset and cards reordered\n    if (ChocolateAlreadyClicked) {\n      this.setState({\n        chocolate: this.state.chocolate.sort(function(a, b) {\n          return 0.5 - Math.random();\n        }),\n        clickedChocolate: [],\n        score: 0\n      });\n        alert(\"You lose. Play again?\");\n\n//if you click on an available chocolate, your score is increased and cards reordered\n    } else {\n      this.setState(\n        {\n          chocolate: this.state.chocolate.sort(function(a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedChocolate: this.state.clickedChocolate.concat(\n            currentChocolate\n          ),\n          score: this.state.score + 1\n        },\n//if you get all 12 chocolate corrent you get a congrats message and the game resets        \n        () => {\n          if (this.state.score === 12) {\n            alert(\"Woohoo! You Win!\");\n            this.setState({\n              chocolate: this.state.chocolate.sort(function(a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedChocolate: [],\n              score: 0\n            });\n          }\n        }\n      );\n    }\n  };\n\n//the order of components to be rendered: navbar, jumbotron, Gamecard, footer \n  render() {\n    return (\n      <div>\n        <Navbar \n          score={this.state.score}\n        />\n        <Jumbotron />\n        <div className=\"wrapper\">\n          {this.state.chocolate.map(chocolate => (\n            <GameCard\n              imageClick={this.imageClick}\n              id={chocolate.id}\n              key={chocolate.id}\n              image={chocolate.image}\n            />\n          ))}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}